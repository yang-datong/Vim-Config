#!/bin/bash

set -e

on(){
	if [ "$(uname)" == "Linux" ];then
		gsettings set org.gnome.system.proxy mode 'manual'
		gsettings set org.gnome.system.proxy.http port 7890
		gsettings set org.gnome.system.proxy.http host '127.0.0.1'
		gsettings set org.gnome.system.proxy.https port 7890
		gsettings set org.gnome.system.proxy.https host '127.0.0.1'
		gsettings set org.gnome.system.proxy.socks port 7891
		gsettings set org.gnome.system.proxy.socks host '127.0.0.1'
		gsettings set org.gnome.system.proxy ignore-hosts "['localhost', '127.0.0.0/8', '::1']"
	else

		#获取所有的网络服务
		network_services=$(networksetup -listallnetworkservices | tail -n +2 | sed 's/ /_TODO_/g')
		for name in ${network_services};do
			name=$(echo $name | sed 's/_TODO_/ /g')
			# 设置代理
			networksetup -setwebproxy "$name" 127.0.0.1 7890 && networksetup -setsecurewebproxy "$name" 127.0.0.1 7890
			# 启用代理
			networksetup -setwebproxystate "$name" on && networksetup -setsecurewebproxystate "$name" on
			# 查看
			networksetup -getwebproxy "$name" && networksetup -getsecurewebproxy "$name"
		done
	fi
}

off(){
	if [ "$(uname)" == "Linux" ];then
		gsettings set org.gnome.system.proxy mode 'none'
	else
		#关闭所有的网络服务
		network_services=$(networksetup -listallnetworkservices | tail -n +2 | sed 's/ /_TODO_/g')
		for name in ${network_services[@]};do
			name=$(echo $name | sed 's/_TODO_/ /g')
			networksetup -setwebproxystate "$name" off && networksetup -setsecurewebproxystate "$name" off
		done
	fi
}

auto(){
	if [ "$(uname)" == "Linux" ];then
		gsettings set org.gnome.system.proxy mode 'auto'
	else
		echo "Mac OS ???";exit
	fi
}

opt="$1"
case "${opt}" in
	on) on;;
	off) off ;;
	auto) auto;;
	*) echo "Invalid option: -${OPTARG} , Do you say '$(basename $0) on|off|auto' ?" >&2 && exit 1;;
esac
