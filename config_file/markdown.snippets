priority -50

#================== Function ==================
global !p

def create_table(snip):
    lists = snip.buffer[snip.line].strip()[3:].split("*",1)
    snip.buffer[snip.line] = ''
    rows = int(lists[0])
    columns = int(lists[1])
    head = ' | '.join(['$' + str(col) for col in range(1,columns+1)]) + "\n"
    delimiter = ':-|' * (columns-1) + ":-\n"
    body = ""
    for row in range(1,rows+1):
        body += ' | '.join(['$' + str(row*columns+col) for col in range(1,columns+1)]) + "\n"
    snip.expand_anon(head + delimiter + body)

def mermaid_auto_add_mark(snip):
    strs = snip.buffer[snip.line].split("-->")
    snip.buffer[snip.line] = ''
    body=""
    size=len(strs)
    for it in range(0,size):
        item = strs[it].replace("mark","").strip()
        body += str(it) +  "(\"" + item + "\")"
        if (it != size - 1):
            body += " --> "

    snip.expand_anon(body);
endglobal

#================== Markdown ==================
snippet '([1-7])' "1-7" br
`!p 
number = int(match.group(1))
if number == 1:
		snip.rv = ":one:"
elif number == 2:
		snip.rv = ":two:"
elif number == 3:
		snip.rv = ":three:"
elif number == 4:
		snip.rv = ":four:"
elif number == 5:
		snip.rv = ":five:"
elif number == 6:
		snip.rv = ":six:"
elif number == 7:
		snip.rv = ":seven:"
` $0
endsnippet

snippet test "test"
>${1:题号}. ${2:问题} \
$(A).$ ${3:答案A} &emsp;&emsp; $(B).$ ${4:答案B}\
$(C).$ ${5:答案C} &emsp;&emsp; $(D).$ ${6:答案D}
endsnippet

snippet br "br" bA
<br>
$0
endsnippet

snippet box "Box"
<div style=border-style:solid;border-color:red;text-align:center;padding:10px;border-width:1px>
${1:This is a Box}
</div>
endsnippet

snippet clear "clear"
<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
endsnippet

#*${1:${VISUAL}}*$0
snippet * "italics"
\\cdot $0
endsnippet

snippet ** "bold" i
**${1:${VISUAL}}**$0
endsnippet

snippet ` "bold" i
\`${1:${VISUAL}}\`$0
endsnippet

snippet *** "bold italics" i
***${1:${VISUAL}}***$0
endsnippet

snippet //c "text-bold" iA
<font color="red"> ${VISUAL} </font>$0
endsnippet

snippet link "Link to something" i
[${2:text}](${1:${VISUAL:url}})$0
endsnippet

snippet img "Images" i
<img src="$1" width=70% />
$0
endsnippet

snippet ilc "Inline Code" i
\`$1\`$0
endsnippet

snippet sec "Section" b
# ${1:Section Name} #
$0
endsnippet

snippet ssec "Sub Section" b
## ${1:Section Name} ##
$0
endsnippet

snippet sssec "SubSub Section" b
### ${1:Section Name} ###
$0
endsnippet

snippet par "Paragraph" b
#### ${1:Paragraph Name} ####
$0
endsnippet

snippet spar "Paragraph" b
##### ${1:Paragraph Name} #####
$0
endsnippet

snippet over "overline" i
\overline{$1}$0
endsnippet

#https://mermaid.js.org/syntax/flowchart.HTML
snippet mermaid "mermaid"
\`\`\`mermaid
%%{init: {'theme': 'base','themeVariables': {'primaryBorderColor':'#fff','primaryTextColor': '#fff', 'primaryColor': '#383838'}}}%%
graph LR
%%--------------------------------------------------------------------
0("${1:Root}")
1("${1:Branch}")
0 --> 1
%%--------------------------------------------------------------------
\`\`\`
endsnippet

snippet code "Codeblock" b
\`\`\`${1:bash}
$2
\`\`\`
$0
endsnippet

snippet ref "ref"
[ ${1:Label} ]:${2:https://www.bilibili.com}
endsnippet

#snippet ref "Reference Link"
#[${1:${VISUAL:Text}}][${2:id}]$0
#
#[$2]:${4:http://${3:www.url.com}} "${5:$4}"
#endsnippet

snippet fnt "Footnote"
[^${1:${VISUAL:Footnote}}]$0

[^$1]:${2:Text}
endsnippet

snippet details "details"
<details>
<summary>${1:Tag}</summary>
<pre><code>

${VISUAL}$2

</code></pre>
</details>
$0
endsnippet

#================== Function ==================
#snippet i "mark" "re.match('(?:\${1,2})(.*?)\\1{1,2}$', snip.buffer[snip.line])" e # TODO:  <08-03-23, yourname> #数学公式上下午，以后有大把时间再搞
snippet mat "mark" "re.match('.*\$.*\$.*', snip.buffer[snip.line])" ei
match
endsnippet

pre_expand "create_table(snip)"
snippet "tab(\d+\*\d+)" "Customizable table" br
endsnippet

pre_expand "mermaid_auto_add_mark(snip)"
snippet mark "auto add mark" "re.match('.*\s-->\s.*', snip.buffer[snip.line])" e
endsnippet

snippet tab_html "tab_html"
<table>
<!- head ->
  <tr>
    <th>month</th><th>time</th><th>work</th>
  </tr>
  <tr>
   <td rowspan="3">6月</td><td>语文</td><td>95</td>
  </tr>
  <tr>
   <td>数学</td><td>96</td>
  </tr>
  <tr>
   <td>英语</td><td>92</td>
  </tr>
</table>
endsnippet

#b 表示触发字符应该在一行的开始
#i 表示触发字符可以在单词内（连续展示会使用这个选项）
#w 表示触发字符的前后必须是一个字母分界点
#r 表示触发字符可以是一个正则表达式
#t 表示展开的代码片段中如果有制表符，原样输出，即使你的 vimrc 里面设置了 expandtab
#m 表示删除代码片段右边的所有空白字符
#e 表示自定义上下文
#A 表示自动触发，不需要按 tab，类似于 VIM 中的 abb
#https://github.com/SirVer/ultisnips/tree/master/doc

