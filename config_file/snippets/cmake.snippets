# cmake snippets

snippet 'cm|main|temp' "CMakeLists.txt" br
cmake_minimum_required(VERSION ${1:3.0})
project(${2:project_name})

set(CMAKE_CXX_STANDARD ${3:17})

${4:add_executable(${2} ${5:source.cpp})}
${6:target_link_libraries(${2} ${7:library_name})}
endsnippet

snippet cmh "CMakeLists.txt (with header paths)" b
cmake_minimum_required(VERSION ${1:3.0})
project(${2:project_name})

set(CMAKE_CXX_STANDARD ${3:17})

include_directories(${4:/path/to/header/files})

${5:add_executable(${2} ${6:source.cpp})}
${7:target_link_libraries(${2} ${8:library_name})}
endsnippet

snippet cmp "CMakeLists.txt (C++ library)" b
cmake_minimum_required(VERSION ${1:3.0})
project(${2:project_name})

set(CMAKE_CXX_STANDARD ${3:17})

add_library(${4:library_name} ${5:source.cpp})

${6:target_link_libraries(${4} ${7:library_dependencies})}
endsnippet

snippet cmtest "CMakeLists.txt (with tests)" b
cmake_minimum_required(VERSION ${1:3.0})
project(${2:project_name})

set(CMAKE_CXX_STANDARD ${3:17})

${4:add_executable(${2} ${5:source.cpp})}
${6:target_link_libraries(${2} ${7:library_name})}

enable_testing()

${8:add_test(${9:test_name} ${10:executable_name})}
endsnippet



# 设置C++标准
snippet cxxstd
set(CMAKE_CXX_STANDARD ${1:11})
set(CMAKE_CXX_STANDARD_REQUIRED ${2:ON})
endsnippet

# 添加可执行文件
snippet addexe
add_executable(${1:executable_name} ${2:source_files})
endsnippet

# 添加库文件
snippet addlib
add_library(${1:library_name} ${2:library_type} ${3:source_files})
endsnippet

# 添加链接库
snippet link
target_link_libraries(${1:target_name} ${2:library1} ${3:library2})
endsnippet

# 添加源文件
snippet addsrc
target_sources(${1:target_name} PRIVATE ${2:source_files})
endsnippet

# 设置编译选项
snippet setcom
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${1:-Wall -Wextra -Werror}")
endsnippet

# 添加头文件路径
snippet include
target_include_directories(${1:target_name} PUBLIC ${2:/path/to/include})
endsnippet

# 添加链接库路径
snippet linkdir
link_directories(${1:/path/to/lib})
endsnippet

# 添加编译定义
snippet def
target_compile_definitions(${1:target_name} PRIVATE ${2:DEFINITION})
endsnippet

# 添加编译依赖
snippet tgtdep
add_dependencies(${1:target_name} ${2:dependency_target})
endsnippet

# 添加安装目标
snippet install
install(TARGETS ${1:target_name} DESTINATION ${2:/usr/local/bin})
endsnippet

snippet echo "echo"
message("message -> $1")
$0
endsnippet

snippet if "if"
IF ($1)
	$0
ENDIF ()
endsnippet

snippet elif "if"
ELSEIF ($1)
endsnippet
